/* Question 1
------------------------------------------ 
We want to understand more about the movies that families are watching. The following categories are considered family movies: 
Animation, Children, Classics, Comedy, Family and Music.

Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.*/

/*Query 1 - query used for first insight
------------------------------------------- */

SELECT film_title,
       category_mame,
       COUNT(rental_id) AS rental_count
FROM
  (SELECT f.title AS film_title,
          c.NAME AS category_mame,
          r.rental_id AS rental_id
   FROM film_category AS fc
   JOIN film AS f ON f.film_id = fc.film_id
   JOIN category AS c ON c.category_id = fc.category_id
   JOIN inventory AS i ON f.film_id = i.film_id
   JOIN rental AS r ON i.inventory_id = r.inventory_id
   WHERE c.NAME IN ('Animation',
                    'Children',
                    'Classics',
                    'Comedy',
                    'Family',
                    'Music')) movie_rentals
GROUP BY 1,
         2
ORDER BY 2,
         1;

_____________________________________________________________________________________________________________________________________________

/*Question 2
------------------------------------
Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination 
of film category for each corresponding rental duration category. The resulting table should have three columns:

1. Category
2. Rental length category
3. Count */

/*Query 2 - query used for second insight*/
--------------------------------------------

SELECT name,
       standard_quartile,
       COUNT(standard_quartile)
FROM
  (SELECT f.title,
          c.name,
          f.rental_duration,
          NTILE(4) OVER (
                         ORDER BY f.rental_duration) AS standard_quartile
   FROM film_category AS fC
   JOIN film AS f ON f.film_id = fc.film_id
   JOIN category AS c ON c.category_id = fc.category_id
   WHERE c.name IN ('Animation',
                    'Children',
                    'Classics',
                    'Comedy',
                    'Family',
                    'Music'))sub
GROUP BY 1,
         2
ORDER BY 1,
         2;

____________________________________________________________________________________________________________________________________________
/*Question 3
-------------------------------------------
We would like to know who were our top 10 paying customers, how many payments they made on a monthly basis during 2007, and what was the amount of 
the monthly payments. Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these 
top 10 paying customers */

/*Query 3 - query used for third insight*/
--------------------------------------------

WITH customer_pay_permonth AS
  (SELECT payment_month,
          fullname,
          COUNT(customer_id) AS payment_count_per_month,
          SUM(payment_amount) AS payment_amount
   FROM
     (SELECT DATE_TRUNC('month', payment_date) AS payment_month,
             CONCAT(c.first_name, ' ', c.last_name) AS fullname,
             p.amount AS payment_amount,
             c.customer_id
      FROM customer AS c
      JOIN payment AS p ON c.customer_id = p.customer_id
      WHERE payment_date >= '2007-01-01 00:00:00'
        AND payment_date < '2008-01-01 00:00:00' )SUB
   GROUP BY 1,
            2),
     top10_paying_customer AS
  (SELECT fullname,
          SUM(payment_amount) AS total_amount
   FROM customer_pay_permonth
   GROUP BY 1
   ORDER BY 2 DESC
   LIMIT 10)
SELECT *
FROM customer_pay_permonth
WHERE (fullname IN
         (SELECT fullname
          FROM top10_paying_customer AS t))
GROUP BY 2,
         1,
         3,
         4
ORDER BY 2,
         1;

____________________________________________________________________________________________________________________________________________

/*Question 4

Finally, for each of these top 10 paying customers, I would like to find out the difference across their monthly payments during 2007. Please go ahead 
and write a query to compare the payment amounts in each successive month. Repeat this for each of these 10 paying customers. 
Also, it will be tremendously helpful if you can identify the customer name who paid the most difference in terms of payments. */

WITH customer_pay_permonth AS
  (SELECT payment_month,
          fullname,
          COUNT(customer_id) AS payment_count_per_month,
          SUM(payment_amount) AS payment_amount
   FROM
     (SELECT DATE_TRUNC('month', payment_date) AS payment_month,
             CONCAT(c.first_name, ' ', c.last_name) AS fullname,
             p.amount AS payment_amount,
             c.customer_id
      FROM customer AS c
      JOIN payment AS p ON c.customer_id = p.customer_id
      WHERE payment_date >= '2007-01-01 00:00:00'
        AND payment_date < '2008-01-01 00:00:00' )SUB
   GROUP BY 1,
            2),
     top10_paying_customer AS
  (SELECT fullname,
          SUM(payment_amount) AS total_amount
   FROM customer_pay_permonth
   GROUP BY 1
   ORDER BY 2 DESC
   LIMIT 10),
     top10_customer_paypermonth AS
  (SELECT *
   FROM customer_pay_permonth
   WHERE (fullname IN
            (SELECT fullname
             FROM top10_paying_customer AS t))
   GROUP BY 2,
            1,
            3,
            4
   ORDER BY 2,
            1),
     payment_diff AS
  (SELECT *,
          LEAD(payment_amount) OVER w AS lead,
          ABS(COALESCE(LEAD(payment_amount) OVER w - payment_amount)) AS lead_payment_amount_difference
   FROM top10_customer_paypermonth WINDOW w AS (
                                                ORDER BY fullname,
                                                         payment_month))
SELECT *,
       CASE
           WHEN payment_diff.lead_payment_amount_difference =
                  (SELECT MAX(payment_diff.lead_payment_amount_difference)
                   FROM payment_diff) THEN 'maximum payment difference'
       END AS maximum_payment_differene
FROM payment_diff
____________________________________________________________________________________________________________________________________________